#Please make sure that you execute all these steps as a non-root user.

#Install basic tools
apt-get -y update
apt-get install -y net-tools
apt-get install -y iputils-ping
apt-get install -y wget
apt-get install -y nano
apt-get install -y less
apt-get install -y curl

#Install NGINX
sudo touch /etc/apt/sources.list.d/nginx.list
sudo nano /etc/apt/sources.list.d/nginx.list
	##Add these lines inside the nginx.list file
	deb http://nginx.org/packages/ubuntu/ xenial nginx
	deb-src http://nginx.org/packages/ubuntu/ xenial nginx
sudo apt-get install nginx
sudo /etc/init.d/nginx start					#Use the "docker-machine ls" command to check the IP address use by the Docker, use it to browse the website

#Install MySQL
sudo apt-get install mysql-server mysql-client libmysqlclient-dev
sudo /etc/init.d/mysql start
sudo /usr/bin/mysql_secure_installation			#Root password set to root

#Install PostgreSQL
sudo sh -c "echo 'deb http://apt.postgresql.org/pub/repos/apt/ xenial-pgdg main' > /etc/apt/sources.list.d/pgdg.list"
wget --quiet -O - http://apt.postgresql.org/pub/repos/apt/ACCC4CF8.asc | apt-key add -
sudo apt-get update
sudo apt-get install postgresql-common
sudo apt-get install postgresql-9.5 libpq-dev
/etc/init.d/postgresql start
su postgres
create users test -s					#User test is created. Feel free to replace test with any user you want to create
psql
\password test						#To assign a password to test user					

#Install PHP
sudo apt-get install php7.0 php-cli php7.0-fpm php7.0-cgi
sudo /etc/init.d/php7.0-fpm start

#Configure NGINX to read PHP
sudo nano /etc/nginx/sites-available/default
	#Uncomment the next lines:
		#location ~ \.php$ {
		#	include snippets/fastcgi-php.conf;
		#	fastcgi_pass unix:/run/php/php7.0-fpm.sock;
		#}
sudo /etc/init.d/nginx restart				#Now the NGINX processes PHP code

#Install Ruby
cd
sudo apt-get update
sudo apt-get install git-core curl zlib1g-dev build-essential libssl-dev libreadline-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt1-dev libcurl4-openssl-dev python-software-properties libffi-dev nodejs
git clone https://github.com/rbenv/rbenv.git ~/.rbenv
echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.bashrc
echo 'eval "$(rbenv init -)"' >> ~/.bashrc
exec $SHELL
git clone https://github.com/rbenv/ruby-build.git ~/.rbenv/plugins/ruby-build
echo 'export PATH="$HOME/.rbenv/plugins/ruby-build/bin:$PATH"' >> ~/.bashrc
exec $SHELL
rbenv install 2.4.0
rbenv global 2.4.0
ruby -v
gem install bundler
rbenv rehash

#Install NodeJS & Rails
curl -sL https://deb.nodesource.com/setup_4.x | bash -
sudo apt-get install -y nodejs
gem install rails -v 5.0.1
rbenv rehash
rails -v

#Install Git (These steps were not done in the docker image)
git config --global color.ui true
git config --global user.name "YOUR NAME"
git config --global user.email "YOUR@EMAIL.com"
ssh-keygen -t rsa -b 4096 -C "YOUR@EMAIL.com"
cat ~/.ssh/id_rsa.pub
ssh -T git@github.com


#References
https://www.digitalocean.com/community/tutorials/how-to-install-linux-nginx-mysql-php-lemp-stack-in-ubuntu-16-04
https://gorails.com/setup/ubuntu/16.04

